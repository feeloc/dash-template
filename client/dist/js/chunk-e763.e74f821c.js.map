{"version":3,"sources":["webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/codemirror/addon/edit/continuelist.js","webpack:///./node_modules/codemirror/mode/gfm/gfm.js","webpack:///./node_modules/typo-js/typo.js","webpack:///./node_modules/codemirror/addon/display/fullscreen.js","webpack:///./src/view/components/markdown/markdown.vue?c693","webpack:///./src/components/markdown/markdown.vue?e00e","webpack:///src/components/markdown/markdown.vue","webpack:///./src/components/markdown/markdown.vue?78ba","webpack:///./src/components/markdown/markdown.vue?9772","webpack:///./src/components/markdown/index.js","webpack:///src/view/components/markdown/markdown.vue","webpack:///./src/view/components/markdown/markdown.vue?d15b","webpack:///./src/view/components/markdown/markdown.vue","webpack:///./src/view/components/markdown/markdown.vue?057a","webpack:///./src/components/markdown/markdown.vue?e6a9","webpack:///./node_modules/codemirror/mode/markdown/markdown.js","webpack:///./node_modules/codemirror/addon/selection/mark-selection.js","webpack:///./node_modules/codemirror/addon/mode/overlay.js","webpack:///./node_modules/simplemde/src/js/codemirror/tablist.js","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/codemirror/addon/display/placeholder.js","webpack:///./node_modules/codemirror-spell-checker/src/js/spell-checker.js","webpack:///./node_modules/simplemde/src/js/simplemde.js","webpack:///./node_modules/codemirror/mode/meta.js"],"names":["global","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","lang","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","resolveUrl","base","baseUrls","_escapes","_scheme","_email","_attribute","_href","_backpedal","output","out","mangle","inLink","trim","outputLink","escapes","codespan","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","prot","decodeURIComponent","e","baseUrl","originIndependentUrl","encodeURI","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","obj","target","key","arguments","Object","hasOwnProperty","call","tableRow","count","splice","callback","pending","done","err","message","silent","setOptions","getDefaults","inlineLexer","module","exports","window","mod","__webpack_require__","CodeMirror","listRE","emptyListRE","unorderedListRE","incrementRemainingMarkdownListNumbers","cm","pos","startLine","line","lookAhead","skipCount","startItem","getLine","startIndent","nextLineNumber","nextLine","nextItem","nextIndent","newNumber","nextNumber","itemNumber","isNaN","replaceRange","commands","newlineAndIndentContinueMarkdownList","getOption","Pass","ranges","listSelections","replacements","head","eolState","getStateAfter","inList","inQuote","cursorBeforeBullet","empty","execCommand","indent","after","numbered","replaceSelections","urlRE","defineMode","config","modeConfig","codeDepth","blankLine","state","gfmOverlay","startState","codeBlock","ateSpace","copyState","s","stream","combineTokens","skipToEnd","sol","before","eatWhile","difference","eatSpace","gitHubSpice","string","markdownConfig","taskLists","strikethrough","emoji","attr","overlayMode","getMode","defineMIME","__dirname","Buffer","Typo","dictionary","affData","wordsData","settings","dictionaryTable","compoundRules","compoundRuleCodes","replacementTable","memoized","loaded","path","_len","_jlen","self","readDataFile","setFunc","response","_readFile","asyncLoad","then","data","setAffData","setup","setWordsData","_parseAFF","rule","ONLYINCOMPOUND","_parseDIC","ruleText","expressionText","character","loadedCallback","chrome","extension","dictionaryPath","getURL","load","charset","async","XMLHttpRequest","promise","req","open","Promise","resolve","reject","onload","status","responseText","statusText","onerror","overrideMimeType","send","fs","existsSync","stats","statSync","fileDescriptor","openSync","buffer","size","readSync","console","log","subline","numEntries","lineParts","_removeAffixComments","lines","definitionParts","ruleType","ruleCode","combineable","entries","charactersToRemove","additionParts","charactersToAdd","continuationClasses","parseRuleCodes","regexToMatch","entry","add","remove","_removeDicComments","addWord","word","parts","ruleCodesArray","NEEDAFFIX","newWords","_applyRule","ii","_iilen","newWord","k","combineCode","combineRule","otherNewWords","iii","_iiilen","otherNewWord","textCodes","FLAG","substr","continuationRule","concat","check","aWord","trimmedWord","checkExact","toUpperCase","capitalizedWord","hasFlag","lowercaseWord","ruleCodes","COMPOUNDMIN","flag","wordFlags","Array","apply","alphabet","suggest","limit","memoizedLimit","replacementEntry","correctedWord","edits1","words","rv","known","correct","ed1","ed2","corrections","weighted_corrections","sorted_corrections","sorter","a","sort","capitalization_scheme","min","suggestions","setFullscreen","wrap","getWrapperElement","fullScreenRestore","scrollTop","pageYOffset","scrollLeft","pageXOffset","width","style","height","className","document","documentElement","overflow","refresh","setNormal","info","scrollTo","defineOption","old","Init","render","_vm","_h","$createElement","_c","_self","model","value","$$v","expression","staticRenderFns","markdownvue_type_template_id_b709a36e_render","staticClass","ref","markdownvue_type_template_id_b709a36e_staticRenderFns","markdownvue_type_script_lang_js_","naem","props","default","localCache","Boolean","editor","methods","addEvents","_this","codemirror","on","localStorage","markdownContent","$emit","mounted","simplemde_default","assign","element","$refs","markdown_markdownvue_type_script_lang_js_","component","componentNormalizer","__file","markdown","components_markdown","components_markdown_markdownvue_type_script_lang_js_","components","MarkdownEditor","view_components_markdown_markdownvue_type_script_lang_js_","markdown_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","cmCfg","modeCfg","htmlMode","htmlModeMissing","findModeByName","found","mime","mimes","mode","highlightFormatting","maxBlockquoteDepth","fencedCodeBlockHighlighting","xml","tokenTypeOverrides","tokenTypes","list1","list2","list3","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","tokenType","hrRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","expandedTab","switchInline","f","switchBlock","lineIsEmpty","linkTitle","indentedCode","htmlBlock","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","maxNonCodeIndentation","listStack","lineIndentation","indentationDiff","allowsInlineContinuation","fencedCodeEnd","isHr","getType","eat","setext","listType","current","taskList","fencedEndRE","localMode","localState","local","footnoteLink","htmlState","inner","innerMode","tagStart","context","tokenize","isInText","md_inside","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","taskOpen","taskClosed","listMod","handleText","matchCh","previousFormatting","t","formattingEscape","end","atts","backUp","len","leftFlanking","rightFlanking","setEm","setStrong","retType","getLinkHrefInside","linkRE",")","]","endChar","returnState","footnoteLinkInside","footnoteUrl","textAfter","closeBrackets","fold","onCursorActivity","markedSelection","operation","update","onChange","clear","prev","markedSelectionStyle","reset","off","CHUNK_SIZE","Pos","cmp","cmpPos","coverRange","from","to","addAt","array","cls","endLine","atEnd","mark","markText","somethingSelected","getCursor","coverStart","find","coverEnd","shift","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","electricChars","baseToken","overlayToken","tabAndIndentMarkdownList","indentWithTabs","spaces","tabSize","replaceSelection","shiftTabAndUnindentMarkdownList","htmlConfig","autoSelfClosers","area","col","command","embed","frame","img","input","keygen","meta","param","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","hgroup","menu","nav","ol","section","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","indentUnit","prop","inText","chain","ok","inBlock","doctype","inTag","baseState","tagName","inAttribute","stringStartCol","closure","eol","isInAttribute","terminator","Context","startOfLine","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","mimeModes","clearPlaceholder","placeholder","parentNode","removeChild","setPlaceholder","elt","createElement","cssText","direction","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","onBlur","isEmpty","wrapper","lineCount","hasFocus","CodeMirrorSpellChecker","codeMirrorInstance","includes","aff_loading","xhr_aff","readyState","aff_data","num_loaded","typo","dic_data","platform","dic_loading","xhr_dic","rx_word","backdrop","isMac","navigator","bindings","toggleBold","toggleItalic","drawLink","toggleHeadingSmaller","toggleHeadingBigger","drawImage","toggleBlockquote","toggleOrderedList","toggleUnorderedList","toggleCodeBlock","togglePreview","toggleStrikethrough","toggleHeading1","toggleHeading2","toggleHeading3","cleanBlock","drawTable","drawHorizontalRule","undo","redo","toggleSideBySide","toggleFullScreen","shortcuts","getBindingName","isMobile","userAgent","vendor","opera","fixShortcut","createIcon","enableTooltips","el","createTootlip","action","tabIndex","createSep","innerHTML","actionName","tooltip","getState","stat","getTokenAt","types","ret","bold","italic","saved_overflow","setOption","previousSibling","toolbarButton","toolbarElements","fullscreen","sidebyside","nextSibling","_toggleBlock","blockStyles","fenceCharsToInsert","fencing_line","token_state","code_type","line_num","firstTok","lastTok","getLineHandle","fencedChars","insertFencingAtSelection","cur_start","cur_end","start_line_sel","end_line_sel","sel_multi","repl_start","repl_end","_replaceSelection","setSelection","block_start","block_end","is_code","focus","start_text","start_line","end_text","end_line","fencedTok","fence_chars","search_from","next_line","next_line_last_tok","next_line_indented","indentLine","no_sel_and_starting_of_line","_toggleLine","_toggleHeading","_cleanBlock","promptURLs","prompt","promptTexts","insertTexts","horizontalRule","preview","useSideBySideListener","setTimeout","previewNormal","lastChild","toolbar","toolbar_div","sideBySideRenderingFunction","previewRender","active","startEnd","startPoint","endPoint","getSelection","currHeadingLevel","search","repl","unordered-list","ordered-list","map","start_chars","end_chars","_mergeProperties","property","constructor","extend","wordCount","pattern","m","toolbarBuiltInButtons","heading-smaller","heading-bigger","heading-1","heading-2","heading-3","separator-1","clean-block","separator-2","horizontal-rule","separator-3","side-by-side","separator-4","guide","separator-5","SimpleMDE","parent","autoDownloadFA","autoDownloadFontAwesome","styleSheets","rel","getElementsByTagName","showIcons","plainText","parsingConfig","autosave","unique_id","uniqueId","initialValue","foundSavedValue","isLocalStorageAvailable","setItem","removeItem","markedOptions","renderingConfig","singleLineBreaks","codeSyntaxHighlighting","hljs","highlightAuto","_rendered","keyMaps","addEventListener","event","keyCode","spellChecker","fromTextArea","theme","lineNumbers","autofocus","extraKeys","lineWrapping","allowDropFileTypes","getAttribute","styleSelectedText","forceSync","save","gui","createToolbar","statusbar","createStatusbar","enabled","sideBySide","createSideBySide","temp_cm","bind","simplemde","getItem","setValue","getElementById","d","Date","hh","getHours","getMinutes","h","autosaveTimeoutId","delay","clearAutosavedValue","cScroll","pScroll","v","getScrollInfo","clientHeight","ratio","parseFloat","move","scrollHeight","onscroll","items","bar","toolbarData","toolbarGuideIcon","hideIcons","nonSeparatorIconsFollow","x","toolbarTips","onclick","preventDefault","cmWrapper","onUpdate","defaultValue","getValue","setAttribute","getDoc","isPreviewActive","isSideBySideActive","isFullscreenActive","toTextArea","clearTimeout","modeInfo","ext","file","alias","findModeByMIME","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf"],"mappings":"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","file":"js/chunk-e763.e74f821c.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start',\n          task: istask,\n          checked: ischecked\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)|^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*][\\s\\S]*?[^\\s])\\*(?!\\*)|^_([^\\s_])_(?!_)|^\\*([^\\s*])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f()\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  var cells = tableRow.replace(/([^\\\\])\\|/g, '$1 |').split(/ +\\| */),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    cells[i] = cells[i].replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head;\n      var eolState = cm.getStateAfter(pos.line);\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== 0;\n\n      var line = cm.getLine(pos.line), match = listRE.exec(line);\n      var cursorBeforeBullet = /^\\s*$/.test(line.slice(0, pos.ch));\n      if (!ranges[i].empty() || (!inList && !inQuote) || !match || cursorBeforeBullet) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n      if (emptyListRE.test(line)) {\n        if (!/>\\s*$/.test(line)) cm.replaceRange(\"\", {\n          line: pos.line, ch: 0\n        }, {\n          line: pos.line, ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n      } else {\n        var indent = match[1], after = match[5];\n        var numbered = !(unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0);\n        var bullet = numbered ? (parseInt(match[3], 10) + 1) + match[4] : match[2].replace(\"x\", \" \");\n        replacements[i] = \"\\n\" + indent + bullet + after;\n\n        if (numbered) incrementRemainingMarkdownListNumbers(cm, pos);\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  };\n\n  // Auto-updating Markdown list numbers when a new item is added to the\n  // middle of a list\n  function incrementRemainingMarkdownListNumbers(cm, pos) {\n    var startLine = pos.line, lookAhead = 0, skipCount = 0;\n    var startItem = listRE.exec(cm.getLine(startLine)), startIndent = startItem[1];\n\n    do {\n      lookAhead += 1;\n      var nextLineNumber = startLine + lookAhead;\n      var nextLine = cm.getLine(nextLineNumber), nextItem = listRE.exec(nextLine);\n\n      if (nextItem) {\n        var nextIndent = nextItem[1];\n        var newNumber = (parseInt(startItem[3], 10) + lookAhead - skipCount);\n        var nextNumber = (parseInt(nextItem[3], 10)), itemNumber = nextNumber;\n\n        if (startIndent === nextIndent && !isNaN(nextNumber)) {\n          if (newNumber === nextNumber) itemNumber = nextNumber + 1;\n          if (newNumber > nextNumber) itemNumber = newNumber + 1;\n          cm.replaceRange(\n            nextLine.replace(listRE, nextIndent + itemNumber + nextItem[4] + nextItem[5]),\n          {\n            line: nextLineNumber, ch: 0\n          }, {\n            line: nextLineNumber, ch: nextLine.length\n          });\n        } else {\n          if (startIndent.length > nextIndent.length) return;\n          // This doesn't run if the next line immediatley indents, as it is\n          // not clear of the users intention (new indented item or same level)\n          if ((startIndent.length < nextIndent.length) && (lookAhead === 1)) return;\n          skipCount += 1;\n        }\n      }\n    } while (nextItem);\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n","/* globals chrome: false */\n/* globals __dirname: false */\n/* globals require: false */\n/* globals Buffer: false */\n/* globals module: false */\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\n\nvar Typo;\n\n(function () {\n\"use strict\";\n\n/**\n * Typo constructor.\n *\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n *                              \"en_US\". This is only used to auto-load dictionaries.\n * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .aff\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\n * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .dic\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\n * @param {Object} [settings]   Constructor settings. Available properties are:\n *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\n *                              environment.\n *                              {Object} [flags]: flag information.\n *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\n *                              asynchronously.\n *                              {Function} [loadedCallback]: Called when both affData and wordsData\n *                              have been loaded. Only used if asyncLoad is set to true. The parameter\n *                              is the instantiated Typo object.\n *\n * @returns {Typo} A Typo object.\n */\n\nTypo = function (dictionary, affData, wordsData, settings) {\n\tsettings = settings || {};\n\n\tthis.dictionary = null;\n\t\n\tthis.rules = {};\n\tthis.dictionaryTable = {};\n\t\n\tthis.compoundRules = [];\n\tthis.compoundRuleCodes = {};\n\t\n\tthis.replacementTable = [];\n\t\n\tthis.flags = settings.flags || {}; \n\t\n\tthis.memoized = {};\n\n\tthis.loaded = false;\n\t\n\tvar self = this;\n\t\n\tvar path;\n\t\n\t// Loop-control variables.\n\tvar i, j, _len, _jlen;\n\t\n\tif (dictionary) {\n\t\tself.dictionary = dictionary;\n\t\t\n\t\t// If the data is preloaded, just setup the Typo object.\n\t\tif (affData && wordsData) {\n\t\t\tsetup();\n\t\t}\n\t\t// Loading data for Chrome extentions.\n\t\telse if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = \"typo/dictionaries\";\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\"), setAffData);\n\t\t\tif (!wordsData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\"), setWordsData);\n\t\t}\n\t\telse {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse if (typeof __dirname !== 'undefined') {\n\t\t\t\tpath = __dirname + '/dictionaries';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = './dictionaries';\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\", setAffData);\n\t\t\tif (!wordsData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\", setWordsData);\n\t\t}\n\t}\n\t\n\tfunction readDataFile(url, setFunc) {\n\t\tvar response = self._readFile(url, null, settings.asyncLoad);\n\t\t\n\t\tif (settings.asyncLoad) {\n\t\t\tresponse.then(function(data) {\n\t\t\t\tsetFunc(data);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tsetFunc(response);\n\t\t}\n\t}\n\n\tfunction setAffData(data) {\n\t\taffData = data;\n\n\t\tif (wordsData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setWordsData(data) {\n\t\twordsData = data;\n\n\t\tif (affData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setup() {\n\t\tself.rules = self._parseAFF(affData);\n\t\t\n\t\t// Save the rule codes that are used in compound rules.\n\t\tself.compoundRuleCodes = {};\n\t\t\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar rule = self.compoundRules[i];\n\t\t\t\n\t\t\tfor (j = 0, _jlen = rule.length; j < _jlen; j++) {\n\t\t\t\tself.compoundRuleCodes[rule[j]] = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\n\t\t// will do the work of saving the list of words that are compound-only.\n\t\tif (\"ONLYINCOMPOUND\" in self.flags) {\n\t\t\tself.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\n\t\t}\n\t\t\n\t\tself.dictionaryTable = self._parseDIC(wordsData);\n\t\t\n\t\t// Get rid of any codes from the compound rule codes that are never used \n\t\t// (or that were special regex characters).  Not especially necessary... \n\t\tfor (i in self.compoundRuleCodes) {\n\t\t\tif (self.compoundRuleCodes[i].length === 0) {\n\t\t\t\tdelete self.compoundRuleCodes[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Build the full regular expressions for each compound rule.\n\t\t// I have a feeling (but no confirmation yet) that this method of \n\t\t// testing for compound words is probably slow.\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar ruleText = self.compoundRules[i];\n\t\t\t\n\t\t\tvar expressionText = \"\";\n\t\t\t\n\t\t\tfor (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n\t\t\t\tvar character = ruleText[j];\n\t\t\t\t\n\t\t\t\tif (character in self.compoundRuleCodes) {\n\t\t\t\t\texpressionText += \"(\" + self.compoundRuleCodes[character].join(\"|\") + \")\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpressionText += character;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself.compoundRules[i] = new RegExp(expressionText, \"i\");\n\t\t}\n\t\t\n\t\tself.loaded = true;\n\t\t\n\t\tif (settings.asyncLoad && settings.loadedCallback) {\n\t\t\tsettings.loadedCallback(self);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nTypo.prototype = {\n\t/**\n\t * Loads a Typo instance from a hash of all of the Typo properties.\n\t *\n\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n\t */\n\t\n\tload : function (obj) {\n\t\tfor (var i in obj) {\n\t\t\tif (obj.hasOwnProperty(i)) {\n\t\t\t\tthis[i] = obj[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Read the contents of a file.\n\t * \n\t * @param {String} path The path (relative) to the file.\n\t * @param {String} [charset=\"ISO8859-1\"] The expected charset of the file\n\t * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\n\t *        files are read synchronously.\n\t * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\n\t *          always returned.\n\t */\n\t\n\t_readFile : function (path, charset, async) {\n\t\tcharset = charset || \"utf8\";\n\t\t\n\t\tif (typeof XMLHttpRequest !== 'undefined') {\n\t\t\tvar promise;\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\treq.open(\"GET\", path, async);\n\t\t\t\n\t\t\tif (async) {\n\t\t\t\tpromise = new Promise(function(resolve, reject) {\n\t\t\t\t\treq.onload = function() {\n\t\t\t\t\t\tif (req.status === 200) {\n\t\t\t\t\t\t\tresolve(req.responseText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\treq.onerror = function() {\n\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tif (req.overrideMimeType)\n\t\t\t\treq.overrideMimeType(\"text/plain; charset=\" + charset);\n\t\t\n\t\t\treq.send(null);\n\t\t\t\n\t\t\treturn async ? promise : req.responseText;\n\t\t}\n\t\telse if (typeof require !== 'undefined') {\n\t\t\t// Node.js\n\t\t\tvar fs = require(\"fs\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (fs.existsSync(path)) {\n\t\t\t\t\tvar stats = fs.statSync(path);\n\t\t\t\t\t\n\t\t\t\t\tvar fileDescriptor = fs.openSync(path, 'r');\n\t\t\t\t\t\n\t\t\t\t\tvar buffer = new Buffer(stats.size);\n\t\t\t\t\t\n\t\t\t\t\tfs.readSync(fileDescriptor, buffer, 0, buffer.length, null);\n\t\t\t\t\t\n\t\t\t\t\treturn buffer.toString(charset, 0, buffer.length);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"Path \" + path + \" does not exist.\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Parse the rules out from a .aff file.\n\t *\n\t * @param {String} data The contents of the affix file.\n\t * @returns object The rules from the file.\n\t */\n\t\n\t_parseAFF : function (data) {\n\t\tvar rules = {};\n\t\t\n\t\tvar line, subline, numEntries, lineParts;\n\t\tvar i, j, _len, _jlen;\n\t\t\n\t\t// Remove comment lines\n\t\tdata = this._removeAffixComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\t\n\t\tfor (i = 0, _len = lines.length; i < _len; i++) {\n\t\t\tline = lines[i];\n\t\t\t\n\t\t\tvar definitionParts = line.split(/\\s+/);\n\t\t\t\n\t\t\tvar ruleType = definitionParts[0];\n\t\t\t\n\t\t\tif (ruleType == \"PFX\" || ruleType == \"SFX\") {\n\t\t\t\tvar ruleCode = definitionParts[1];\n\t\t\t\tvar combineable = definitionParts[2];\n\t\t\t\tnumEntries = parseInt(definitionParts[3], 10);\n\t\t\t\t\n\t\t\t\tvar entries = [];\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tsubline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = subline.split(/\\s+/);\n\t\t\t\t\tvar charactersToRemove = lineParts[2];\n\t\t\t\t\t\n\t\t\t\t\tvar additionParts = lineParts[3].split(\"/\");\n\t\t\t\t\t\n\t\t\t\t\tvar charactersToAdd = additionParts[0];\n\t\t\t\t\tif (charactersToAdd === \"0\") charactersToAdd = \"\";\n\t\t\t\t\t\n\t\t\t\t\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\n\t\t\t\t\t\n\t\t\t\t\tvar regexToMatch = lineParts[4];\n\t\t\t\t\t\n\t\t\t\t\tvar entry = {};\n\t\t\t\t\tentry.add = charactersToAdd;\n\t\t\t\t\t\n\t\t\t\t\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\t\t\t\t\t\n\t\t\t\t\tif (regexToMatch !== \".\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.match = new RegExp(regexToMatch + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.match = new RegExp(\"^\" + regexToMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (charactersToRemove != \"0\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.remove = new RegExp(charactersToRemove  + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.remove = charactersToRemove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trules[ruleCode] = { \"type\" : ruleType, \"combineable\" : (combineable == \"Y\"), \"entries\" : entries };\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"COMPOUNDRULE\") {\n\t\t\t\tnumEntries = parseInt(definitionParts[1], 10);\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\tthis.compoundRules.push(lineParts[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"REP\") {\n\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\n\t\t\t\tif (lineParts.length === 3) {\n\t\t\t\t\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// ONLYINCOMPOUND\n\t\t\t\t// COMPOUNDMIN\n\t\t\t\t// FLAG\n\t\t\t\t// KEEPCASE\n\t\t\t\t// NEEDAFFIX\n\t\t\t\t\n\t\t\t\tthis.flags[ruleType] = definitionParts[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn rules;\n\t},\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from an affix file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeAffixComments : function (data) {\n\t\t// Remove comments\n\t\t// This used to remove any string starting with '#' up to the end of the line,\n\t\t// but some COMPOUNDRULE definitions include '#' as part of the rule.\n\t\t// I haven't seen any affix files that use comments on the same line as real data,\n\t\t// so I don't think this will break anything.\n\t\tdata = data.replace(/^\\s*#.*$/mg, \"\");\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, '').replace(/\\s\\s*$/m, '');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, \"\\n\");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\treturn data;\n\t},\n\t\n\t/**\n\t * Parses the words out from the .dic file.\n\t *\n\t * @param {String} data The data from the dictionary file.\n\t * @returns object The lookup table containing all of the words and\n\t *                 word forms from the dictionary.\n\t */\n\t\n\t_parseDIC : function (data) {\n\t\tdata = this._removeDicComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\tvar dictionaryTable = {};\n\t\t\n\t\tfunction addWord(word, rules) {\n\t\t\t// Some dictionaries will list the same word multiple times with different rule sets.\n\t\t\tif (!dictionaryTable.hasOwnProperty(word)) {\n\t\t\t\tdictionaryTable[word] = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (rules.length > 0) {\n\t\t\t\tif (dictionaryTable[word] === null) {\n\t\t\t\t\tdictionaryTable[word] = [];\n\t\t\t\t}\n\n\t\t\t\tdictionaryTable[word].push(rules);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// The first line is the number of words in the dictionary.\n\t\tfor (var i = 1, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tvar parts = line.split(\"/\", 2);\n\t\t\t\n\t\t\tvar word = parts[0];\n\n\t\t\t// Now for each affix rule, generate that form of the word.\n\t\t\tif (parts.length > 1) {\n\t\t\t\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\n\t\t\t\t\n\t\t\t\t// Save the ruleCodes for compound word situations.\n\t\t\t\tif (!(\"NEEDAFFIX\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n\t\t\t\t\taddWord(word, ruleCodesArray);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n\t\t\t\t\tvar code = ruleCodesArray[j];\n\t\t\t\t\t\n\t\t\t\t\tvar rule = this.rules[code];\n\t\t\t\t\t\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tvar newWords = this._applyRule(word, rule);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n\t\t\t\t\t\t\tvar newWord = newWords[ii];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddWord(newWord, []);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (rule.combineable) {\n\t\t\t\t\t\t\t\tfor (var k = j + 1; k < _jlen; k++) {\n\t\t\t\t\t\t\t\t\tvar combineCode = ruleCodesArray[k];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar combineRule = this.rules[combineCode];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (combineRule) {\n\t\t\t\t\t\t\t\t\t\tif (combineRule.combineable && (rule.type != combineRule.type)) {\n\t\t\t\t\t\t\t\t\t\t\tvar otherNewWords = this._applyRule(newWord, combineRule);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar otherNewWord = otherNewWords[iii];\n\t\t\t\t\t\t\t\t\t\t\t\taddWord(otherNewWord, []);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (code in this.compoundRuleCodes) {\n\t\t\t\t\t\tthis.compoundRuleCodes[code].push(word);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddWord(word.trim(), []);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dictionaryTable;\n\t},\n\t\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from a .dic file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeDicComments : function (data) {\n\t\t// I can't find any official documentation on it, but at least the de_DE\n\t\t// dictionary uses tab-indented lines as comments.\n\t\t\n\t\t// Remove comments\n\t\tdata = data.replace(/^\\t.*$/mg, \"\");\n\t\t\n\t\treturn data;\n\t},\n\t\n\tparseRuleCodes : function (textCodes) {\n\t\tif (!textCodes) {\n\t\t\treturn [];\n\t\t}\n\t\telse if (!(\"FLAG\" in this.flags)) {\n\t\t\treturn textCodes.split(\"\");\n\t\t}\n\t\telse if (this.flags.FLAG === \"long\") {\n\t\t\tvar flags = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n\t\t\t\tflags.push(textCodes.substr(i, 2));\n\t\t\t}\n\t\t\t\n\t\t\treturn flags;\n\t\t}\n\t\telse if (this.flags.FLAG === \"num\") {\n\t\t\treturn textCodes.split(\",\");\n\t\t}\n\t},\n\t\n\t/**\n\t * Applies an affix rule to a word.\n\t *\n\t * @param {String} word The base word.\n\t * @param {Object} rule The affix rule.\n\t * @returns {String[]} The new words generated by the rule.\n\t */\n\t\n\t_applyRule : function (word, rule) {\n\t\tvar entries = rule.entries;\n\t\tvar newWords = [];\n\t\t\n\t\tfor (var i = 0, _len = entries.length; i < _len; i++) {\n\t\t\tvar entry = entries[i];\n\t\t\t\n\t\t\tif (!entry.match || word.match(entry.match)) {\n\t\t\t\tvar newWord = word;\n\t\t\t\t\n\t\t\t\tif (entry.remove) {\n\t\t\t\t\tnewWord = newWord.replace(entry.remove, \"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rule.type === \"SFX\") {\n\t\t\t\t\tnewWord = newWord + entry.add;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewWord = entry.add + newWord;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewWords.push(newWord);\n\t\t\t\t\n\t\t\t\tif (\"continuationClasses\" in entry) {\n\t\t\t\t\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n\t\t\t\t\t\tvar continuationRule = this.rules[entry.continuationClasses[j]];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (continuationRule) {\n\t\t\t\t\t\t\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This shouldn't happen, but it does, at least in the de_DE dictionary.\n\t\t\t\t\t\t\t// I think the author mistakenly supplied lower-case rule codes instead \n\t\t\t\t\t\t\t// of upper-case.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newWords;\n\t},\n\t\n\t/**\n\t * Checks whether a word or a capitalization variant exists in the current dictionary.\n\t * The word is trimmed and several variations of capitalizations are checked.\n\t * If you want to check a word without any changes made to it, call checkExact()\n\t *\n\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n\t *\n\t * @param {String} aWord The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheck : function (aWord) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\t\t\n\t\t// Remove leading and trailing whitespace\n\t\tvar trimmedWord = aWord.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\tif (this.checkExact(trimmedWord)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// The exact word is not in the dictionary.\n\t\tif (trimmedWord.toUpperCase() === trimmedWord) {\n\t\t\t// The word was supplied in all uppercase.\n\t\t\t// Check for a capitalized form of the word.\n\t\t\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\t\t\t\n\t\t\tif (this.hasFlag(capitalizedWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.checkExact(capitalizedWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar lowercaseWord = trimmedWord.toLowerCase();\n\t\t\n\t\tif (lowercaseWord !== trimmedWord) {\n\t\t\tif (this.hasFlag(lowercaseWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for a lowercase form\n\t\t\tif (this.checkExact(lowercaseWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Checks whether a word exists in the current dictionary.\n\t *\n\t * @param {String} word The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheckExact : function (word) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tvar ruleCodes = this.dictionaryTable[word];\n\t\t\n\t\tvar i, _len;\n\t\t\n\t\tif (typeof ruleCodes === 'undefined') {\n\t\t\t// Check if this might be a compound word.\n\t\t\tif (\"COMPOUNDMIN\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n\t\t\t\tfor (i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\t\t\tif (word.match(this.compoundRules[i])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (ruleCodes === null) {\n\t\t\t// a null (but not undefined) value for an entry in the dictionary table\n\t\t\t// means that the word is in the dictionary but has no flags.\n\t\t\treturn true;\n\t\t}\n\t\telse if (typeof ruleCodes === 'object') { // this.dictionary['hasOwnProperty'] will be a function.\n\t\t\tfor (i = 0, _len = ruleCodes.length; i < _len; i++) {\n\t\t\t\tif (!this.hasFlag(word, \"ONLYINCOMPOUND\", ruleCodes[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Looks up whether a given word is flagged with a given flag.\n\t *\n\t * @param {String} word The word in question.\n\t * @param {String} flag The flag in question.\n\t * @return {Boolean}\n\t */\n\t \n\thasFlag : function (word, flag, wordFlags) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tif (flag in this.flags) {\n\t\t\tif (typeof wordFlags === 'undefined') {\n\t\t\t\twordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n\t\t\t}\n\t\t\t\n\t\t\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Returns a list of suggestions for a misspelled word.\n\t *\n\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n\t * This suggestor is primitive, but it works.\n\t *\n\t * @param {String} word The misspelling.\n\t * @param {Number} [limit=5] The maximum number of suggestions to return.\n\t * @returns {String[]} The array of suggestions.\n\t */\n\t\n\talphabet : \"\",\n\t\n\tsuggest : function (word, limit) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tlimit = limit || 5;\n\n\t\tif (this.memoized.hasOwnProperty(word)) {\n\t\t\tvar memoizedLimit = this.memoized[word]['limit'];\n\n\t\t\t// Only return the cached list if it's big enough or if there weren't enough suggestions\n\t\t\t// to fill a smaller limit.\n\t\t\tif (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\n\t\t\t\treturn this.memoized[word]['suggestions'].slice(0, limit);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.check(word)) return [];\n\t\t\n\t\t// Check the replacement table.\n\t\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n\t\t\tvar replacementEntry = this.replacementTable[i];\n\t\t\t\n\t\t\tif (word.indexOf(replacementEntry[0]) !== -1) {\n\t\t\t\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\t\t\t\t\n\t\t\t\tif (this.check(correctedWord)) {\n\t\t\t\t\treturn [ correctedWord ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar self = this;\n\t\tself.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t\t\n\t\t/*\n\t\tif (!self.alphabet) {\n\t\t\t// Use the alphabet as implicitly defined by the words in the dictionary.\n\t\t\tvar alphaHash = {};\n\t\t\t\n\t\t\tfor (var i in self.dictionaryTable) {\n\t\t\t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n\t\t\t\t\talphaHash[i[j]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i in alphaHash) {\n\t\t\t\tself.alphabet += i;\n\t\t\t}\n\t\t\t\n\t\t\tvar alphaArray = self.alphabet.split(\"\");\n\t\t\talphaArray.sort();\n\t\t\tself.alphabet = alphaArray.join(\"\");\n\t\t}\n\t\t*/\n\t\t\n\t\tfunction edits1(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tvar ii, i, j, _iilen, _len, _jlen;\n\t\t\t\n\t\t\tfor (ii = 0, _iilen = words.length; ii < _iilen; ii++) {\n\t\t\t\tvar word = words[ii];\n\t\t\t\t\n\t\t\t\tfor (i = 0, _len = word.length + 1; i < _len; i++) {\n\t\t\t\t\tvar s = [ word.substring(0, i), word.substring(i) ];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\trv.push(s[0] + s[1].substring(1));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Eliminate transpositions of identical letters\n\t\t\t\t\tif (s[1].length > 1 && s[1][1] !== s[1][0]) {\n\t\t\t\t\t\trv.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\t// Eliminate replacement of a letter by itself\n\t\t\t\t\t\t\tif (self.alphabet[j] != s[1].substring(0,1)){\n\t\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1].substring(1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction known(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = words.length; i < _len; i++) {\n\t\t\t\tif (self.check(words[i])) {\n\t\t\t\t\trv.push(words[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction correct(word) {\n\t\t\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\n\t\t\tvar ed1 = edits1([word]);\n\t\t\tvar ed2 = edits1(ed1);\n\t\t\t\n\t\t\tvar corrections = known(ed1.concat(ed2));\n\t\t\t\n\t\t\tvar i, _len;\n\t\t\t\n\t\t\t// Sort the edits based on how many different ways they were created.\n\t\t\tvar weighted_corrections = {};\n\t\t\t\n\t\t\tfor (i = 0, _len = corrections.length; i < _len; i++) {\n\t\t\t\tif (!(corrections[i] in weighted_corrections)) {\n\t\t\t\t\tweighted_corrections[corrections[i]] = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tweighted_corrections[corrections[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sorted_corrections = [];\n\t\t\t\n\t\t\tfor (i in weighted_corrections) {\n\t\t\t\tif (weighted_corrections.hasOwnProperty(i)) {\n\t\t\t\t\tsorted_corrections.push([ i, weighted_corrections[i] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction sorter(a, b) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tsorted_corrections.sort(sorter).reverse();\n\t\t\t\n\t\t\tvar rv = [];\n\n\t\t\tvar capitalization_scheme = \"lowercase\";\n\t\t\t\n\t\t\tif (word.toUpperCase() === word) {\n\t\t\t\tcapitalization_scheme = \"uppercase\";\n\t\t\t}\n\t\t\telse if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\n\t\t\t\tcapitalization_scheme = \"capitalized\";\n\t\t\t}\n\t\t\t\n\t\t\tfor (i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\n\t\t\t\tif (\"uppercase\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\n\t\t\t\t}\n\t\t\t\telse if (\"capitalized\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!self.hasFlag(sorted_corrections[i][0], \"NOSUGGEST\")) {\n\t\t\t\t\trv.push(sorted_corrections[i][0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tthis.memoized[word] = {\n\t\t\t'suggestions': correct(word),\n\t\t\t'limit': limit\n\t\t};\n\n\t\treturn this.memoized[word]['suggestions'];\n\t}\n};\n})();\n\n// Support for use as a node.js module.\nif (typeof module !== 'undefined') {\n\tmodule.exports = Typo;\n}","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"fullScreen\", false, function(cm, val, old) {\n    if (old == CodeMirror.Init) old = false;\n    if (!old == !val) return;\n    if (val) setFullscreen(cm);\n    else setNormal(cm);\n  });\n\n  function setFullscreen(cm) {\n    var wrap = cm.getWrapperElement();\n    cm.state.fullScreenRestore = {scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset,\n                                  width: wrap.style.width, height: wrap.style.height};\n    wrap.style.width = \"\";\n    wrap.style.height = \"auto\";\n    wrap.className += \" CodeMirror-fullscreen\";\n    document.documentElement.style.overflow = \"hidden\";\n    cm.refresh();\n  }\n\n  function setNormal(cm) {\n    var wrap = cm.getWrapperElement();\n    wrap.className = wrap.className.replace(/\\s*CodeMirror-fullscreen\\b/, \"\");\n    document.documentElement.style.overflow = \"\";\n    var info = cm.state.fullScreenRestore;\n    wrap.style.width = info.width; wrap.style.height = info.height;\n    window.scrollTo(info.scrollLeft, info.scrollTop);\n    cm.refresh();\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('markdown-editor',{model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"markdown-wrapper\"},[_c('textarea',{ref:\"editor\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"markdown-wrapper\">\n    <textarea ref=\"editor\"></textarea>\n  </div>\n</template>\n\n<script>\nimport Simplemde from 'simplemde'\nimport 'simplemde/dist/simplemde.min.css'\nexport default {\n  naem: 'MarkdownEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    localCache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      editor: null\n    }\n  },\n  methods: {\n    addEvents () {\n      this.editor.codemirror.on('change', () => {\n        let value = this.editor.value()\n        if (this.localCache) localStorage.markdownContent = value\n        this.$emit('input', value)\n        this.$emit('on-change', value)\n      })\n      this.editor.codemirror.on('focus', () => {\n        this.$emit('on-focus', this.editor.value())\n      })\n      this.editor.codemirror.on('blur', () => {\n        this.$emit('on-blur', this.editor.value())\n      })\n    }\n  },\n  mounted () {\n    this.editor = new Simplemde(Object.assign(this.options, {\n      element: this.$refs.editor\n    }))\n    /**\n     * 事件列表为Codemirror编辑器的事件，更多事件类型，请参考：\n     * https://codemirror.net/doc/manual.html#events\n     */\n    this.addEvents()\n    let content = localStorage.markdownContent\n    if (content) this.editor.value(content)\n  }\n}\n</script>\n\n<style lang=\"less\">\n.markdown-wrapper{\n  .editor-toolbar.fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen ~ .editor-preview-side{\n    z-index: 9999;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./markdown.vue?vue&type=template&id=b709a36e&\"\nimport script from \"./markdown.vue?vue&type=script&lang=js&\"\nexport * from \"./markdown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./markdown.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"markdown.vue\"\nexport default component.exports","import MarkdownEditor from './markdown.vue'\nexport default MarkdownEditor\n","<template>\n  <div>\n    <markdown-editor v-model=\"content\"/>\n  </div>\n</template>\n\n<script>\nimport MarkdownEditor from '_c/markdown'\nexport default {\n  name: 'markdown_page',\n  components: {\n    MarkdownEditor\n  },\n  data () {\n    return {\n      content: ''\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./markdown.vue?vue&type=template&id=157f5a35&\"\nimport script from \"./markdown.vue?vue&type=script&lang=js&\"\nexport * from \"./markdown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./markdown.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"markdown.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\"","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      state.f = inlineNormal;\n      state.block = blockNormal;\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        // Reset inline styles which shouldn't propagate aross list items\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^[a-z_\\d+-]+:/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Because sometimes you need to mark the selected *text*.\n//\n// Adds an option 'styleSelectedText' which, when enabled, gives\n// selected text the CSS class given as option value, or\n// \"CodeMirror-selectedtext\" when the value is not a string.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"styleSelectedText\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.markedSelection = [];\n      cm.state.markedSelectionStyle = typeof val == \"string\" ? val : \"CodeMirror-selectedtext\";\n      reset(cm);\n      cm.on(\"cursorActivity\", onCursorActivity);\n      cm.on(\"change\", onChange);\n    } else if (!val && prev) {\n      cm.off(\"cursorActivity\", onCursorActivity);\n      cm.off(\"change\", onChange);\n      clear(cm);\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n    }\n  });\n\n  function onCursorActivity(cm) {\n    if (cm.state.markedSelection)\n      cm.operation(function() { update(cm); });\n  }\n\n  function onChange(cm) {\n    if (cm.state.markedSelection && cm.state.markedSelection.length)\n      cm.operation(function() { clear(cm); });\n  }\n\n  var CHUNK_SIZE = 8;\n  var Pos = CodeMirror.Pos;\n  var cmp = CodeMirror.cmpPos;\n\n  function coverRange(cm, from, to, addAt) {\n    if (cmp(from, to) == 0) return;\n    var array = cm.state.markedSelection;\n    var cls = cm.state.markedSelectionStyle;\n    for (var line = from.line;;) {\n      var start = line == from.line ? from : Pos(line, 0);\n      var endLine = line + CHUNK_SIZE, atEnd = endLine >= to.line;\n      var end = atEnd ? to : Pos(endLine, 0);\n      var mark = cm.markText(start, end, {className: cls});\n      if (addAt == null) array.push(mark);\n      else array.splice(addAt++, 0, mark);\n      if (atEnd) break;\n      line = endLine;\n    }\n  }\n\n  function clear(cm) {\n    var array = cm.state.markedSelection;\n    for (var i = 0; i < array.length; ++i) array[i].clear();\n    array.length = 0;\n  }\n\n  function reset(cm) {\n    clear(cm);\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++)\n      coverRange(cm, ranges[i].from(), ranges[i].to());\n  }\n\n  function update(cm) {\n    if (!cm.somethingSelected()) return clear(cm);\n    if (cm.listSelections().length > 1) return reset(cm);\n\n    var from = cm.getCursor(\"start\"), to = cm.getCursor(\"end\");\n\n    var array = cm.state.markedSelection;\n    if (!array.length) return coverRange(cm, from, to);\n\n    var coverStart = array[0].find(), coverEnd = array[array.length - 1].find();\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\n        cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0)\n      return reset(cm);\n\n    while (cmp(from, coverStart.from) > 0) {\n      array.shift().clear();\n      coverStart = array[0].find();\n    }\n    if (cmp(from, coverStart.from) < 0) {\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\n        array.shift().clear();\n        coverRange(cm, from, coverStart.to, 0);\n      } else {\n        coverRange(cm, from, coverStart.from, 0);\n      }\n    }\n\n    while (cmp(to, coverEnd.to) < 0) {\n      array.pop().clear();\n      coverEnd = array[array.length - 1].find();\n    }\n    if (cmp(to, coverEnd.to) > 0) {\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n        array.pop().clear();\n        coverRange(cm, coverEnd.from, to);\n      } else {\n        coverRange(cm, coverEnd.to, to);\n      }\n    }\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter) {\n      return base.indent(state.base, textAfter);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\nvar CodeMirror = require(\"codemirror\");\n\nCodeMirror.commands.tabAndIndentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentMore\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n\nCodeMirror.commands.shiftTabAndUnindentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentLess\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n","// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n\t// Initialize\n\toptions = options || {};\n\n\n\t// Verify\n\tif(typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n\t\tconsole.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n\t\treturn;\n\t}\n\n\n\t// Because some browsers don't support this functionality yet\n\tif(!String.prototype.includes) {\n\t\tString.prototype.includes = function() {\n\t\t\t\"use strict\";\n\t\t\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\n\t\t};\n\t}\n\n\n\t// Define the new mode\n\toptions.codeMirrorInstance.defineMode(\"spell-checker\", function(config) {\n\t\t// Load AFF/DIC data\n\t\tif(!CodeMirrorSpellChecker.aff_loading) {\n\t\t\tCodeMirrorSpellChecker.aff_loading = true;\n\t\t\tvar xhr_aff = new XMLHttpRequest();\n\t\t\txhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\t\t\txhr_aff.onload = function() {\n\t\t\t\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_aff.send(null);\n\t\t}\n\n\t\tif(!CodeMirrorSpellChecker.dic_loading) {\n\t\t\tCodeMirrorSpellChecker.dic_loading = true;\n\t\t\tvar xhr_dic = new XMLHttpRequest();\n\t\t\txhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\t\t\txhr_dic.onload = function() {\n\t\t\t\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_dic.send(null);\n\t\t}\n\n\n\t\t// Define what separates a word\n\t\tvar rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n\n\t\t// Create the overlay and such\n\t\tvar overlay = {\n\t\t\ttoken: function(stream) {\n\t\t\t\tvar ch = stream.peek();\n\t\t\t\tvar word = \"\";\n\n\t\t\t\tif(rx_word.includes(ch)) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n\t\t\t\t\tword += ch;\n\t\t\t\t\tstream.next();\n\t\t\t\t}\n\n\t\t\t\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\n\t\t\t\t\treturn \"spell-error\"; // CSS class: cm-spell-error\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tvar mode = options.codeMirrorInstance.getMode(\n\t\t\tconfig, config.backdrop || \"text/plain\"\n\t\t);\n\n\t\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\n\t});\n}\n\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;","/*global require,module*/\n\"use strict\";\nvar CodeMirror = require(\"codemirror\");\nrequire(\"codemirror/addon/edit/continuelist.js\");\nrequire(\"./codemirror/tablist\");\nrequire(\"codemirror/addon/display/fullscreen.js\");\nrequire(\"codemirror/mode/markdown/markdown.js\");\nrequire(\"codemirror/addon/mode/overlay.js\");\nrequire(\"codemirror/addon/display/placeholder.js\");\nrequire(\"codemirror/addon/selection/mark-selection.js\");\nrequire(\"codemirror/mode/gfm/gfm.js\");\nrequire(\"codemirror/mode/xml/xml.js\");\nvar CodeMirrorSpellChecker = require(\"codemirror-spell-checker\");\nvar marked = require(\"marked\");\n\n\n// Some variables\nvar isMac = /Mac/.test(navigator.platform);\n\n// Mapping of actions that can be bound to keyboard shortcuts or toolbar buttons\nvar bindings = {\n\t\"toggleBold\": toggleBold,\n\t\"toggleItalic\": toggleItalic,\n\t\"drawLink\": drawLink,\n\t\"toggleHeadingSmaller\": toggleHeadingSmaller,\n\t\"toggleHeadingBigger\": toggleHeadingBigger,\n\t\"drawImage\": drawImage,\n\t\"toggleBlockquote\": toggleBlockquote,\n\t\"toggleOrderedList\": toggleOrderedList,\n\t\"toggleUnorderedList\": toggleUnorderedList,\n\t\"toggleCodeBlock\": toggleCodeBlock,\n\t\"togglePreview\": togglePreview,\n\t\"toggleStrikethrough\": toggleStrikethrough,\n\t\"toggleHeading1\": toggleHeading1,\n\t\"toggleHeading2\": toggleHeading2,\n\t\"toggleHeading3\": toggleHeading3,\n\t\"cleanBlock\": cleanBlock,\n\t\"drawTable\": drawTable,\n\t\"drawHorizontalRule\": drawHorizontalRule,\n\t\"undo\": undo,\n\t\"redo\": redo,\n\t\"toggleSideBySide\": toggleSideBySide,\n\t\"toggleFullScreen\": toggleFullScreen\n};\n\nvar shortcuts = {\n\t\"toggleBold\": \"Cmd-B\",\n\t\"toggleItalic\": \"Cmd-I\",\n\t\"drawLink\": \"Cmd-K\",\n\t\"toggleHeadingSmaller\": \"Cmd-H\",\n\t\"toggleHeadingBigger\": \"Shift-Cmd-H\",\n\t\"cleanBlock\": \"Cmd-E\",\n\t\"drawImage\": \"Cmd-Alt-I\",\n\t\"toggleBlockquote\": \"Cmd-'\",\n\t\"toggleOrderedList\": \"Cmd-Alt-L\",\n\t\"toggleUnorderedList\": \"Cmd-L\",\n\t\"toggleCodeBlock\": \"Cmd-Alt-C\",\n\t\"togglePreview\": \"Cmd-P\",\n\t\"toggleSideBySide\": \"F9\",\n\t\"toggleFullScreen\": \"F11\"\n};\n\nvar getBindingName = function(f) {\n\tfor(var key in bindings) {\n\t\tif(bindings[key] === f) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn null;\n};\n\nvar isMobile = function() {\n\tvar check = false;\n\t(function(a) {\n\t\tif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n\t})(navigator.userAgent || navigator.vendor || window.opera);\n\treturn check;\n};\n\n\n/**\n * Fix shortcut. Mac use Command, others use Ctrl.\n */\nfunction fixShortcut(name) {\n\tif(isMac) {\n\t\tname = name.replace(\"Ctrl\", \"Cmd\");\n\t} else {\n\t\tname = name.replace(\"Cmd\", \"Ctrl\");\n\t}\n\treturn name;\n}\n\n\n/**\n * Create icon element for toolbar.\n */\nfunction createIcon(options, enableTooltips, shortcuts) {\n\toptions = options || {};\n\tvar el = document.createElement(\"a\");\n\tenableTooltips = (enableTooltips == undefined) ? true : enableTooltips;\n\n\tif(options.title && enableTooltips) {\n\t\tel.title = createTootlip(options.title, options.action, shortcuts);\n\n\t\tif(isMac) {\n\t\t\tel.title = el.title.replace(\"Ctrl\", \"⌘\");\n\t\t\tel.title = el.title.replace(\"Alt\", \"⌥\");\n\t\t}\n\t}\n\n\tel.tabIndex = -1;\n\tel.className = options.className;\n\treturn el;\n}\n\nfunction createSep() {\n\tvar el = document.createElement(\"i\");\n\tel.className = \"separator\";\n\tel.innerHTML = \"|\";\n\treturn el;\n}\n\nfunction createTootlip(title, action, shortcuts) {\n\tvar actionName;\n\tvar tooltip = title;\n\n\tif(action) {\n\t\tactionName = getBindingName(action);\n\t\tif(shortcuts[actionName]) {\n\t\t\ttooltip += \" (\" + fixShortcut(shortcuts[actionName]) + \")\";\n\t\t}\n\t}\n\n\treturn tooltip;\n}\n\n/**\n * The state of CodeMirror at the given position.\n */\nfunction getState(cm, pos) {\n\tpos = pos || cm.getCursor(\"start\");\n\tvar stat = cm.getTokenAt(pos);\n\tif(!stat.type) return {};\n\n\tvar types = stat.type.split(\" \");\n\n\tvar ret = {},\n\t\tdata, text;\n\tfor(var i = 0; i < types.length; i++) {\n\t\tdata = types[i];\n\t\tif(data === \"strong\") {\n\t\t\tret.bold = true;\n\t\t} else if(data === \"variable-2\") {\n\t\t\ttext = cm.getLine(pos.line);\n\t\t\tif(/^\\s*\\d+\\.\\s/.test(text)) {\n\t\t\t\tret[\"ordered-list\"] = true;\n\t\t\t} else {\n\t\t\t\tret[\"unordered-list\"] = true;\n\t\t\t}\n\t\t} else if(data === \"atom\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"em\") {\n\t\t\tret.italic = true;\n\t\t} else if(data === \"quote\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"strikethrough\") {\n\t\t\tret.strikethrough = true;\n\t\t} else if(data === \"comment\") {\n\t\t\tret.code = true;\n\t\t} else if(data === \"link\") {\n\t\t\tret.link = true;\n\t\t} else if(data === \"tag\") {\n\t\t\tret.image = true;\n\t\t} else if(data.match(/^header(\\-[1-6])?$/)) {\n\t\t\tret[data.replace(\"header\", \"heading\")] = true;\n\t\t}\n\t}\n\treturn ret;\n}\n\n\n// Saved overflow setting\nvar saved_overflow = \"\";\n\n/**\n * Toggle full screen of the editor.\n */\nfunction toggleFullScreen(editor) {\n\t// Set fullscreen\n\tvar cm = editor.codemirror;\n\tcm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n\n\n\t// Prevent scrolling on body during fullscreen active\n\tif(cm.getOption(\"fullScreen\")) {\n\t\tsaved_overflow = document.body.style.overflow;\n\t\tdocument.body.style.overflow = \"hidden\";\n\t} else {\n\t\tdocument.body.style.overflow = saved_overflow;\n\t}\n\n\n\t// Update toolbar class\n\tvar wrap = cm.getWrapperElement();\n\n\tif(!/fullscreen/.test(wrap.previousSibling.className)) {\n\t\twrap.previousSibling.className += \" fullscreen\";\n\t} else {\n\t\twrap.previousSibling.className = wrap.previousSibling.className.replace(/\\s*fullscreen\\b/, \"\");\n\t}\n\n\n\t// Update toolbar button\n\tvar toolbarButton = editor.toolbarElements.fullscreen;\n\n\tif(!/active/.test(toolbarButton.className)) {\n\t\ttoolbarButton.className += \" active\";\n\t} else {\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t}\n\n\n\t// Hide side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\n\n/**\n * Action for toggling bold.\n */\nfunction toggleBold(editor) {\n\t_toggleBlock(editor, \"bold\", editor.options.blockStyles.bold);\n}\n\n\n/**\n * Action for toggling italic.\n */\nfunction toggleItalic(editor) {\n\t_toggleBlock(editor, \"italic\", editor.options.blockStyles.italic);\n}\n\n\n/**\n * Action for toggling strikethrough.\n */\nfunction toggleStrikethrough(editor) {\n\t_toggleBlock(editor, \"strikethrough\", \"~~\");\n}\n\n/**\n * Action for toggling code block.\n */\nfunction toggleCodeBlock(editor) {\n\tvar fenceCharsToInsert = editor.options.blockStyles.code;\n\n\tfunction fencing_line(line) {\n\t\t/* return true, if this is a ``` or ~~~ line */\n\t\tif(typeof line !== \"object\") {\n\t\t\tthrow \"fencing_line() takes a 'line' object (not a line number, or line text).  Got: \" + typeof line + \": \" + line;\n\t\t}\n\t\treturn line.styles && line.styles[2] && line.styles[2].indexOf(\"formatting-code-block\") !== -1;\n\t}\n\n\tfunction token_state(token) {\n\t\t// base goes an extra level deep when mode backdrops are used, e.g. spellchecker on\n\t\treturn token.state.base.base || token.state.base;\n\t}\n\n\tfunction code_type(cm, line_num, line, firstTok, lastTok) {\n\t\t/*\n\t\t * Return \"single\", \"indented\", \"fenced\" or false\n\t\t *\n\t\t * cm and line_num are required.  Others are optional for efficiency\n\t\t *   To check in the middle of a line, pass in firstTok yourself.\n\t\t */\n\t\tline = line || cm.getLineHandle(line_num);\n\t\tfirstTok = firstTok || cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: 1\n\t\t});\n\t\tlastTok = lastTok || (!!line.text && cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: line.text.length - 1\n\t\t}));\n\t\tvar types = firstTok.type ? firstTok.type.split(\" \") : [];\n\t\tif(lastTok && token_state(lastTok).indentedCode) {\n\t\t\t// have to check last char, since first chars of first line aren\"t marked as indented\n\t\t\treturn \"indented\";\n\t\t} else if(types.indexOf(\"comment\") === -1) {\n\t\t\t// has to be after \"indented\" check, since first chars of first indented line aren\"t marked as such\n\t\t\treturn false;\n\t\t} else if(token_state(firstTok).fencedChars || token_state(lastTok).fencedChars || fencing_line(line)) {\n\t\t\treturn \"fenced\";\n\t\t} else {\n\t\t\treturn \"single\";\n\t\t}\n\t}\n\n\tfunction insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert) {\n\t\tvar start_line_sel = cur_start.line + 1,\n\t\t\tend_line_sel = cur_end.line + 1,\n\t\t\tsel_multi = cur_start.line !== cur_end.line,\n\t\t\trepl_start = fenceCharsToInsert + \"\\n\",\n\t\t\trepl_end = \"\\n\" + fenceCharsToInsert;\n\t\tif(sel_multi) {\n\t\t\tend_line_sel++;\n\t\t}\n\t\t// handle last char including \\n or not\n\t\tif(sel_multi && cur_end.ch === 0) {\n\t\t\trepl_end = fenceCharsToInsert + \"\\n\";\n\t\t\tend_line_sel--;\n\t\t}\n\t\t_replaceSelection(cm, false, [repl_start, repl_end]);\n\t\tcm.setSelection({\n\t\t\tline: start_line_sel,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: end_line_sel,\n\t\t\tch: 0\n\t\t});\n\t}\n\n\tvar cm = editor.codemirror,\n\t\tcur_start = cm.getCursor(\"start\"),\n\t\tcur_end = cm.getCursor(\"end\"),\n\t\ttok = cm.getTokenAt({\n\t\t\tline: cur_start.line,\n\t\t\tch: cur_start.ch || 1\n\t\t}), // avoid ch 0 which is a cursor pos but not token\n\t\tline = cm.getLineHandle(cur_start.line),\n\t\tis_code = code_type(cm, cur_start.line, line, tok);\n\tvar block_start, block_end, lineCount;\n\n\tif(is_code === \"single\") {\n\t\t// similar to some SimpleMDE _toggleBlock logic\n\t\tvar start = line.text.slice(0, cur_start.ch).replace(\"`\", \"\"),\n\t\t\tend = line.text.slice(cur_start.ch).replace(\"`\", \"\");\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 99999999999999\n\t\t});\n\t\tcur_start.ch--;\n\t\tif(cur_start !== cur_end) {\n\t\t\tcur_end.ch--;\n\t\t}\n\t\tcm.setSelection(cur_start, cur_end);\n\t\tcm.focus();\n\t} else if(is_code === \"fenced\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\n\t\t\t// find the fenced line so we know what type it is (tilde, backticks, number of them)\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fencedTok = cm.getTokenAt({\n\t\t\t\tline: block_start,\n\t\t\t\tch: 1\n\t\t\t});\n\t\t\tvar fence_chars = token_state(fencedTok).fencedChars;\n\t\t\tvar start_text, start_line;\n\t\t\tvar end_text, end_line;\n\t\t\t// check for selection going up against fenced lines, in which case we don't want to add more fencing\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t} else if(fencing_line(cm.getLineHandle(cur_start.line - 1))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line - 1;\n\t\t\t} else {\n\t\t\t\tstart_text = fence_chars + \"\\n\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t}\n\t\t\tif(fencing_line(cm.getLineHandle(cur_end.line))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line;\n\t\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t\tend_line += 1;\n\t\t\t\t}\n\t\t\t} else if(cur_end.ch !== 0 && fencing_line(cm.getLineHandle(cur_end.line + 1))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t} else {\n\t\t\t\tend_text = fence_chars + \"\\n\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t}\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t// full last line selected, putting cursor at beginning of next\n\t\t\t\tend_line -= 1;\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\t// end line first, so that line numbers don't change\n\t\t\t\tcm.replaceRange(end_text, {\n\t\t\t\t\tline: end_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: end_line + (end_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(start_text, {\n\t\t\t\t\tline: start_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: start_line + (start_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.setSelection({\n\t\t\t\tline: start_line + (start_text ? 1 : 0),\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: end_line + (start_text ? 1 : -1),\n\t\t\t\tch: 0\n\t\t\t});\n\t\t\tcm.focus();\n\t\t} else {\n\t\t\t// no selection, search for ends of this fenced block\n\t\t\tvar search_from = cur_start.line;\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) { // gets a little tricky if cursor is right on a fenced line\n\t\t\t\tif(code_type(cm, cur_start.line + 1) === \"fenced\") {\n\t\t\t\t\tblock_start = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line + 1; // for searching for \"end\"\n\t\t\t\t} else {\n\t\t\t\t\tblock_end = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line - 1; // for searching for \"start\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_start === undefined) {\n\t\t\t\tfor(block_start = search_from; block_start >= 0; block_start--) {\n\t\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_end === undefined) {\n\t\t\t\tlineCount = cm.lineCount();\n\t\t\t\tfor(block_end = search_from; block_end < lineCount; block_end++) {\n\t\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_start,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_start + 1,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_end - 1,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_end,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.focus();\n\t\t}\n\t} else if(is_code === \"indented\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\t\t\tblock_start = cur_start.line;\n\t\t\tblock_end = cur_end.line;\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\tblock_end--;\n\t\t\t}\n\t\t} else {\n\t\t\t// no selection, search for ends of this indented block\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_start, line) !== \"indented\") {\n\t\t\t\t\t\tblock_start += 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlineCount = cm.lineCount();\n\t\t\tfor(block_end = cur_start.line; block_end < lineCount; block_end++) {\n\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_end, line) !== \"indented\") {\n\t\t\t\t\t\tblock_end -= 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if we are going to un-indent based on a selected set of lines, and the next line is indented too, we need to\n\t\t// insert a blank line so that the next line(s) continue to be indented code\n\t\tvar next_line = cm.getLineHandle(block_end + 1),\n\t\t\tnext_line_last_tok = next_line && cm.getTokenAt({\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: next_line.text.length - 1\n\t\t\t}),\n\t\t\tnext_line_indented = next_line_last_tok && token_state(next_line_last_tok).indentedCode;\n\t\tif(next_line_indented) {\n\t\t\tcm.replaceRange(\"\\n\", {\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: 0\n\t\t\t});\n\t\t}\n\n\t\tfor(var i = block_start; i <= block_end; i++) {\n\t\t\tcm.indentLine(i, \"subtract\"); // TODO: this doesn't get tracked in the history, so can't be undone :(\n\t\t}\n\t\tcm.focus();\n\t} else {\n\t\t// insert code formatting\n\t\tvar no_sel_and_starting_of_line = (cur_start.line === cur_end.line && cur_start.ch === cur_end.ch && cur_start.ch === 0);\n\t\tvar sel_multi = cur_start.line !== cur_end.line;\n\t\tif(no_sel_and_starting_of_line || sel_multi) {\n\t\t\tinsertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert);\n\t\t} else {\n\t\t\t_replaceSelection(cm, false, [\"`\", \"`\"]);\n\t\t}\n\t}\n}\n\n/**\n * Action for toggling blockquote.\n */\nfunction toggleBlockquote(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"quote\");\n}\n\n/**\n * Action for toggling heading size: normal -> h1 -> h2 -> h3 -> h4 -> h5 -> h6 -> normal\n */\nfunction toggleHeadingSmaller(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"smaller\");\n}\n\n/**\n * Action for toggling heading size: normal -> h6 -> h5 -> h4 -> h3 -> h2 -> h1 -> normal\n */\nfunction toggleHeadingBigger(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"bigger\");\n}\n\n/**\n * Action for toggling heading size 1\n */\nfunction toggleHeading1(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 1);\n}\n\n/**\n * Action for toggling heading size 2\n */\nfunction toggleHeading2(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 2);\n}\n\n/**\n * Action for toggling heading size 3\n */\nfunction toggleHeading3(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 3);\n}\n\n\n/**\n * Action for toggling ul.\n */\nfunction toggleUnorderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"unordered-list\");\n}\n\n\n/**\n * Action for toggling ol.\n */\nfunction toggleOrderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"ordered-list\");\n}\n\n/**\n * Action for clean block (remove headline, list, blockquote code, markers)\n */\nfunction cleanBlock(editor) {\n\tvar cm = editor.codemirror;\n\t_cleanBlock(cm);\n}\n\n/**\n * Action for drawing a link.\n */\nfunction drawLink(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.link);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.link, options.insertTexts.link, url);\n}\n\n/**\n * Action for drawing an img.\n */\nfunction drawImage(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.image);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.image, options.insertTexts.image, url);\n}\n\n/**\n * Action for drawing a table.\n */\nfunction drawTable(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.table, options.insertTexts.table);\n}\n\n/**\n * Action for drawing a horizontal rule.\n */\nfunction drawHorizontalRule(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.image, options.insertTexts.horizontalRule);\n}\n\n\n/**\n * Undo action.\n */\nfunction undo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.undo();\n\tcm.focus();\n}\n\n\n/**\n * Redo action.\n */\nfunction redo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.redo();\n\tcm.focus();\n}\n\n\n/**\n * Toggle side by side preview\n */\nfunction toggleSideBySide(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\tvar toolbarButton = editor.toolbarElements[\"side-by-side\"];\n\tvar useSideBySideListener = false;\n\tif(/editor-preview-active-side/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active-side\\s*/g, \"\"\n\t\t);\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t\twrapper.className = wrapper.className.replace(/\\s*CodeMirror-sided\\s*/g, \" \");\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tif(!cm.getOption(\"fullScreen\"))\n\t\t\t\ttoggleFullScreen(editor);\n\t\t\tpreview.className += \" editor-preview-active-side\";\n\t\t}, 1);\n\t\ttoolbarButton.className += \" active\";\n\t\twrapper.className += \" CodeMirror-sided\";\n\t\tuseSideBySideListener = true;\n\t}\n\n\t// Hide normal preview if active\n\tvar previewNormal = wrapper.lastChild;\n\tif(/editor-preview-active/.test(previewNormal.className)) {\n\t\tpreviewNormal.className = previewNormal.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tvar toolbar = editor.toolbarElements.preview;\n\t\tvar toolbar_div = wrapper.previousSibling;\n\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t}\n\n\tvar sideBySideRenderingFunction = function() {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t};\n\n\tif(!cm.sideBySideRenderingFunction) {\n\t\tcm.sideBySideRenderingFunction = sideBySideRenderingFunction;\n\t}\n\n\tif(useSideBySideListener) {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t\tcm.on(\"update\", cm.sideBySideRenderingFunction);\n\t} else {\n\t\tcm.off(\"update\", cm.sideBySideRenderingFunction);\n\t}\n\n\t// Refresh to fix selection being off (#309)\n\tcm.refresh();\n}\n\n\n/**\n * Preview action.\n */\nfunction togglePreview(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar toolbar_div = wrapper.previousSibling;\n\tvar toolbar = editor.options.toolbar ? editor.toolbarElements.preview : false;\n\tvar preview = wrapper.lastChild;\n\tif(!preview || !/editor-preview/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview\";\n\t\twrapper.appendChild(preview);\n\t}\n\tif(/editor-preview-active/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t\t}\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tpreview.className += \" editor-preview-active\";\n\t\t}, 1);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className += \" active\";\n\t\t\ttoolbar_div.className += \" disabled-for-preview\";\n\t\t}\n\t}\n\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\n\t// Turn off side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\nfunction _replaceSelection(cm, active, startEnd, url) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar text;\n\tvar start = startEnd[0];\n\tvar end = startEnd[1];\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tif(url) {\n\t\tend = end.replace(\"#url#\", url);\n\t}\n\tif(active) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t});\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start.length;\n\t\tif(startPoint !== endPoint) {\n\t\t\tendPoint.ch += start.length;\n\t\t}\n\t}\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\n\nfunction _toggleHeading(cm, direction, size) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tvar currHeadingLevel = text.search(/[^#]/);\n\n\t\t\tif(direction !== undefined) {\n\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = \"###### \" + text;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t}\n\t\t\t\t} else if(currHeadingLevel == 6 && direction == \"smaller\") {\n\t\t\t\t\ttext = text.substr(7);\n\t\t\t\t} else if(currHeadingLevel == 1 && direction == \"bigger\") {\n\t\t\t\t\ttext = text.substr(2);\n\t\t\t\t} else {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = text.substr(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"#\" + text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(size == 1) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if(size == 2) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"## \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"## \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"### \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"### \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\n\nfunction _toggleLine(cm, name) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar stat = getState(cm);\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar repl = {\n\t\t\"quote\": /^(\\s*)\\>\\s+/,\n\t\t\"unordered-list\": /^(\\s*)(\\*|\\-|\\+)\\s+/,\n\t\t\"ordered-list\": /^(\\s*)\\d+\\.\\s+/\n\t};\n\tvar map = {\n\t\t\"quote\": \"> \",\n\t\t\"unordered-list\": \"* \",\n\t\t\"ordered-list\": \"1. \"\n\t};\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tif(stat[name]) {\n\t\t\t\ttext = text.replace(repl[name], \"$1\");\n\t\t\t} else {\n\t\t\t\ttext = map[name] + text;\n\t\t\t}\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\nfunction _toggleBlock(editor, type, start_chars, end_chars) {\n\tif(/editor-preview-active/.test(editor.codemirror.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tend_chars = (typeof end_chars === \"undefined\") ? start_chars : end_chars;\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\n\tvar text;\n\tvar start = start_chars;\n\tvar end = end_chars;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\n\tif(stat[type]) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tif(type == \"bold\") {\n\t\t\tstart = start.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|__)/, \"\");\n\t\t} else if(type == \"italic\") {\n\t\t\tstart = start.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/, \"\");\n\t\t\tend = end.replace(/(\\*|_)/, \"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\tstart = start.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|~~)/, \"\");\n\t\t}\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 99999999999999\n\t\t});\n\n\t\tif(type == \"bold\" || type == \"strikethrough\") {\n\t\t\tstartPoint.ch -= 2;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 2;\n\t\t\t}\n\t\t} else if(type == \"italic\") {\n\t\t\tstartPoint.ch -= 1;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 1;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tif(type == \"bold\") {\n\t\t\ttext = text.split(\"**\").join(\"\");\n\t\t\ttext = text.split(\"__\").join(\"\");\n\t\t} else if(type == \"italic\") {\n\t\t\ttext = text.split(\"*\").join(\"\");\n\t\t\ttext = text.split(\"_\").join(\"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\ttext = text.split(\"~~\").join(\"\");\n\t\t}\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start_chars.length;\n\t\tendPoint.ch = startPoint.ch + text.length;\n\t}\n\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\nfunction _cleanBlock(cm) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar text;\n\n\tfor(var line = startPoint.line; line <= endPoint.line; line++) {\n\t\ttext = cm.getLine(line);\n\t\ttext = text.replace(/^[ ]*([# ]+|\\*|\\-|[> ]+|[0-9]+(.|\\)))[ ]*/, \"\");\n\n\t\tcm.replaceRange(text, {\n\t\t\tline: line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: line,\n\t\t\tch: 99999999999999\n\t\t});\n\t}\n}\n\n// Merge the properties of one object into another.\nfunction _mergeProperties(target, source) {\n\tfor(var property in source) {\n\t\tif(source.hasOwnProperty(property)) {\n\t\t\tif(source[property] instanceof Array) {\n\t\t\t\ttarget[property] = source[property].concat(target[property] instanceof Array ? target[property] : []);\n\t\t\t} else if(\n\t\t\t\tsource[property] !== null &&\n\t\t\t\ttypeof source[property] === \"object\" &&\n\t\t\t\tsource[property].constructor === Object\n\t\t\t) {\n\t\t\t\ttarget[property] = _mergeProperties(target[property] || {}, source[property]);\n\t\t\t} else {\n\t\t\t\ttarget[property] = source[property];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\n// Merge an arbitrary number of objects into one.\nfunction extend(target) {\n\tfor(var i = 1; i < arguments.length; i++) {\n\t\ttarget = _mergeProperties(target, arguments[i]);\n\t}\n\n\treturn target;\n}\n\n/* The right word count in respect for CJK. */\nfunction wordCount(data) {\n\tvar pattern = /[a-zA-Z0-9_\\u0392-\\u03c9\\u0410-\\u04F9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\n\tvar m = data.match(pattern);\n\tvar count = 0;\n\tif(m === null) return count;\n\tfor(var i = 0; i < m.length; i++) {\n\t\tif(m[i].charCodeAt(0) >= 0x4E00) {\n\t\t\tcount += m[i].length;\n\t\t} else {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nvar toolbarBuiltInButtons = {\n\t\"bold\": {\n\t\tname: \"bold\",\n\t\taction: toggleBold,\n\t\tclassName: \"fa fa-bold\",\n\t\ttitle: \"Bold\",\n\t\tdefault: true\n\t},\n\t\"italic\": {\n\t\tname: \"italic\",\n\t\taction: toggleItalic,\n\t\tclassName: \"fa fa-italic\",\n\t\ttitle: \"Italic\",\n\t\tdefault: true\n\t},\n\t\"strikethrough\": {\n\t\tname: \"strikethrough\",\n\t\taction: toggleStrikethrough,\n\t\tclassName: \"fa fa-strikethrough\",\n\t\ttitle: \"Strikethrough\"\n\t},\n\t\"heading\": {\n\t\tname: \"heading\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header\",\n\t\ttitle: \"Heading\",\n\t\tdefault: true\n\t},\n\t\"heading-smaller\": {\n\t\tname: \"heading-smaller\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-smaller\",\n\t\ttitle: \"Smaller Heading\"\n\t},\n\t\"heading-bigger\": {\n\t\tname: \"heading-bigger\",\n\t\taction: toggleHeadingBigger,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-bigger\",\n\t\ttitle: \"Bigger Heading\"\n\t},\n\t\"heading-1\": {\n\t\tname: \"heading-1\",\n\t\taction: toggleHeading1,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-1\",\n\t\ttitle: \"Big Heading\"\n\t},\n\t\"heading-2\": {\n\t\tname: \"heading-2\",\n\t\taction: toggleHeading2,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-2\",\n\t\ttitle: \"Medium Heading\"\n\t},\n\t\"heading-3\": {\n\t\tname: \"heading-3\",\n\t\taction: toggleHeading3,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-3\",\n\t\ttitle: \"Small Heading\"\n\t},\n\t\"separator-1\": {\n\t\tname: \"separator-1\"\n\t},\n\t\"code\": {\n\t\tname: \"code\",\n\t\taction: toggleCodeBlock,\n\t\tclassName: \"fa fa-code\",\n\t\ttitle: \"Code\"\n\t},\n\t\"quote\": {\n\t\tname: \"quote\",\n\t\taction: toggleBlockquote,\n\t\tclassName: \"fa fa-quote-left\",\n\t\ttitle: \"Quote\",\n\t\tdefault: true\n\t},\n\t\"unordered-list\": {\n\t\tname: \"unordered-list\",\n\t\taction: toggleUnorderedList,\n\t\tclassName: \"fa fa-list-ul\",\n\t\ttitle: \"Generic List\",\n\t\tdefault: true\n\t},\n\t\"ordered-list\": {\n\t\tname: \"ordered-list\",\n\t\taction: toggleOrderedList,\n\t\tclassName: \"fa fa-list-ol\",\n\t\ttitle: \"Numbered List\",\n\t\tdefault: true\n\t},\n\t\"clean-block\": {\n\t\tname: \"clean-block\",\n\t\taction: cleanBlock,\n\t\tclassName: \"fa fa-eraser fa-clean-block\",\n\t\ttitle: \"Clean block\"\n\t},\n\t\"separator-2\": {\n\t\tname: \"separator-2\"\n\t},\n\t\"link\": {\n\t\tname: \"link\",\n\t\taction: drawLink,\n\t\tclassName: \"fa fa-link\",\n\t\ttitle: \"Create Link\",\n\t\tdefault: true\n\t},\n\t\"image\": {\n\t\tname: \"image\",\n\t\taction: drawImage,\n\t\tclassName: \"fa fa-picture-o\",\n\t\ttitle: \"Insert Image\",\n\t\tdefault: true\n\t},\n\t\"table\": {\n\t\tname: \"table\",\n\t\taction: drawTable,\n\t\tclassName: \"fa fa-table\",\n\t\ttitle: \"Insert Table\"\n\t},\n\t\"horizontal-rule\": {\n\t\tname: \"horizontal-rule\",\n\t\taction: drawHorizontalRule,\n\t\tclassName: \"fa fa-minus\",\n\t\ttitle: \"Insert Horizontal Line\"\n\t},\n\t\"separator-3\": {\n\t\tname: \"separator-3\"\n\t},\n\t\"preview\": {\n\t\tname: \"preview\",\n\t\taction: togglePreview,\n\t\tclassName: \"fa fa-eye no-disable\",\n\t\ttitle: \"Toggle Preview\",\n\t\tdefault: true\n\t},\n\t\"side-by-side\": {\n\t\tname: \"side-by-side\",\n\t\taction: toggleSideBySide,\n\t\tclassName: \"fa fa-columns no-disable no-mobile\",\n\t\ttitle: \"Toggle Side by Side\",\n\t\tdefault: true\n\t},\n\t\"fullscreen\": {\n\t\tname: \"fullscreen\",\n\t\taction: toggleFullScreen,\n\t\tclassName: \"fa fa-arrows-alt no-disable no-mobile\",\n\t\ttitle: \"Toggle Fullscreen\",\n\t\tdefault: true\n\t},\n\t\"separator-4\": {\n\t\tname: \"separator-4\"\n\t},\n\t\"guide\": {\n\t\tname: \"guide\",\n\t\taction: \"https://simplemde.com/markdown-guide\",\n\t\tclassName: \"fa fa-question-circle\",\n\t\ttitle: \"Markdown Guide\",\n\t\tdefault: true\n\t},\n\t\"separator-5\": {\n\t\tname: \"separator-5\"\n\t},\n\t\"undo\": {\n\t\tname: \"undo\",\n\t\taction: undo,\n\t\tclassName: \"fa fa-undo no-disable\",\n\t\ttitle: \"Undo\"\n\t},\n\t\"redo\": {\n\t\tname: \"redo\",\n\t\taction: redo,\n\t\tclassName: \"fa fa-repeat no-disable\",\n\t\ttitle: \"Redo\"\n\t}\n};\n\nvar insertTexts = {\n\tlink: [\"[\", \"](#url#)\"],\n\timage: [\"![](\", \"#url#)\"],\n\ttable: [\"\", \"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text     | Text     |\\n\\n\"],\n\thorizontalRule: [\"\", \"\\n\\n-----\\n\\n\"]\n};\n\nvar promptTexts = {\n\tlink: \"URL for the link:\",\n\timage: \"URL of the image:\"\n};\n\nvar blockStyles = {\n\t\"bold\": \"**\",\n\t\"code\": \"```\",\n\t\"italic\": \"*\"\n};\n\n/**\n * Interface of SimpleMDE.\n */\nfunction SimpleMDE(options) {\n\t// Handle options parameter\n\toptions = options || {};\n\n\n\t// Used later to refer to it\"s parent\n\toptions.parent = this;\n\n\n\t// Check if Font Awesome needs to be auto downloaded\n\tvar autoDownloadFA = true;\n\n\tif(options.autoDownloadFontAwesome === false) {\n\t\tautoDownloadFA = false;\n\t}\n\n\tif(options.autoDownloadFontAwesome !== true) {\n\t\tvar styleSheets = document.styleSheets;\n\t\tfor(var i = 0; i < styleSheets.length; i++) {\n\t\t\tif(!styleSheets[i].href)\n\t\t\t\tcontinue;\n\n\t\t\tif(styleSheets[i].href.indexOf(\"//maxcdn.bootstrapcdn.com/font-awesome/\") > -1) {\n\t\t\t\tautoDownloadFA = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(autoDownloadFA) {\n\t\tvar link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\";\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(link);\n\t}\n\n\n\t// Find the textarea to use\n\tif(options.element) {\n\t\tthis.element = options.element;\n\t} else if(options.element === null) {\n\t\t// This means that the element option was specified, but no element was found\n\t\tconsole.log(\"SimpleMDE: Error. No element was found.\");\n\t\treturn;\n\t}\n\n\n\t// Handle toolbar\n\tif(options.toolbar === undefined) {\n\t\t// Initialize\n\t\toptions.toolbar = [];\n\n\n\t\t// Loop over the built in buttons, to get the preferred order\n\t\tfor(var key in toolbarBuiltInButtons) {\n\t\t\tif(toolbarBuiltInButtons.hasOwnProperty(key)) {\n\t\t\t\tif(key.indexOf(\"separator-\") != -1) {\n\t\t\t\t\toptions.toolbar.push(\"|\");\n\t\t\t\t}\n\n\t\t\t\tif(toolbarBuiltInButtons[key].default === true || (options.showIcons && options.showIcons.constructor === Array && options.showIcons.indexOf(key) != -1)) {\n\t\t\t\t\toptions.toolbar.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// Handle status bar\n\tif(!options.hasOwnProperty(\"status\")) {\n\t\toptions.status = [\"autosave\", \"lines\", \"words\", \"cursor\"];\n\t}\n\n\n\t// Add default preview rendering function\n\tif(!options.previewRender) {\n\t\toptions.previewRender = function(plainText) {\n\t\t\t// Note: \"this\" refers to the options object\n\t\t\treturn this.parent.markdown(plainText);\n\t\t};\n\t}\n\n\n\t// Set default options for parsing config\n\toptions.parsingConfig = extend({\n\t\thighlightFormatting: true // needed for toggleCodeBlock to detect types of code\n\t}, options.parsingConfig || {});\n\n\n\t// Merging the insertTexts, with the given options\n\toptions.insertTexts = extend({}, insertTexts, options.insertTexts || {});\n\n\n\t// Merging the promptTexts, with the given options\n\toptions.promptTexts = promptTexts;\n\n\n\t// Merging the blockStyles, with the given options\n\toptions.blockStyles = extend({}, blockStyles, options.blockStyles || {});\n\n\n\t// Merging the shortcuts, with the given options\n\toptions.shortcuts = extend({}, shortcuts, options.shortcuts || {});\n\n\n\t// Change unique_id to uniqueId for backwards compatibility\n\tif(options.autosave != undefined && options.autosave.unique_id != undefined && options.autosave.unique_id != \"\")\n\t\toptions.autosave.uniqueId = options.autosave.unique_id;\n\n\n\t// Update this options\n\tthis.options = options;\n\n\n\t// Auto render\n\tthis.render();\n\n\n\t// The codemirror component is only available after rendering\n\t// so, the setter for the initialValue can only run after\n\t// the element has been rendered\n\tif(options.initialValue && (!this.options.autosave || this.options.autosave.foundSavedValue !== true)) {\n\t\tthis.value(options.initialValue);\n\t}\n}\n\n/**\n * Default markdown render.\n */\nSimpleMDE.prototype.markdown = function(text) {\n\tif(marked) {\n\t\t// Initialize\n\t\tvar markedOptions = {};\n\n\n\t\t// Update options\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.singleLineBreaks === false) {\n\t\t\tmarkedOptions.breaks = false;\n\t\t} else {\n\t\t\tmarkedOptions.breaks = true;\n\t\t}\n\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.codeSyntaxHighlighting === true && window.hljs) {\n\t\t\tmarkedOptions.highlight = function(code) {\n\t\t\t\treturn window.hljs.highlightAuto(code).value;\n\t\t\t};\n\t\t}\n\n\n\t\t// Set options\n\t\tmarked.setOptions(markedOptions);\n\n\n\t\t// Return\n\t\treturn marked(text);\n\t}\n};\n\n/**\n * Render editor to the given element.\n */\nSimpleMDE.prototype.render = function(el) {\n\tif(!el) {\n\t\tel = this.element || document.getElementsByTagName(\"textarea\")[0];\n\t}\n\n\tif(this._rendered && this._rendered === el) {\n\t\t// Already rendered.\n\t\treturn;\n\t}\n\n\tthis.element = el;\n\tvar options = this.options;\n\n\tvar self = this;\n\tvar keyMaps = {};\n\n\tfor(var key in options.shortcuts) {\n\t\t// null stands for \"do not bind this command\"\n\t\tif(options.shortcuts[key] !== null && bindings[key] !== null) {\n\t\t\t(function(key) {\n\t\t\t\tkeyMaps[fixShortcut(options.shortcuts[key])] = function() {\n\t\t\t\t\tbindings[key](self);\n\t\t\t\t};\n\t\t\t})(key);\n\t\t}\n\t}\n\n\tkeyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\n\tkeyMaps[\"Tab\"] = \"tabAndIndentMarkdownList\";\n\tkeyMaps[\"Shift-Tab\"] = \"shiftTabAndUnindentMarkdownList\";\n\tkeyMaps[\"Esc\"] = function(cm) {\n\t\tif(cm.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t};\n\n\tdocument.addEventListener(\"keydown\", function(e) {\n\t\te = e || window.event;\n\n\t\tif(e.keyCode == 27) {\n\t\t\tif(self.codemirror.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t\t}\n\t}, false);\n\n\tvar mode, backdrop;\n\tif(options.spellChecker !== false) {\n\t\tmode = \"spell-checker\";\n\t\tbackdrop = options.parsingConfig;\n\t\tbackdrop.name = \"gfm\";\n\t\tbackdrop.gitHubSpice = false;\n\n\t\tCodeMirrorSpellChecker({\n\t\t\tcodeMirrorInstance: CodeMirror\n\t\t});\n\t} else {\n\t\tmode = options.parsingConfig;\n\t\tmode.name = \"gfm\";\n\t\tmode.gitHubSpice = false;\n\t}\n\n\tthis.codemirror = CodeMirror.fromTextArea(el, {\n\t\tmode: mode,\n\t\tbackdrop: backdrop,\n\t\ttheme: \"paper\",\n\t\ttabSize: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentUnit: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentWithTabs: (options.indentWithTabs === false) ? false : true,\n\t\tlineNumbers: false,\n\t\tautofocus: (options.autofocus === true) ? true : false,\n\t\textraKeys: keyMaps,\n\t\tlineWrapping: (options.lineWrapping === false) ? false : true,\n\t\tallowDropFileTypes: [\"text/plain\"],\n\t\tplaceholder: options.placeholder || el.getAttribute(\"placeholder\") || \"\",\n\t\tstyleSelectedText: (options.styleSelectedText != undefined) ? options.styleSelectedText : true\n\t});\n\n\tif(options.forceSync === true) {\n\t\tvar cm = this.codemirror;\n\t\tcm.on(\"change\", function() {\n\t\t\tcm.save();\n\t\t});\n\t}\n\n\tthis.gui = {};\n\n\tif(options.toolbar !== false) {\n\t\tthis.gui.toolbar = this.createToolbar();\n\t}\n\tif(options.status !== false) {\n\t\tthis.gui.statusbar = this.createStatusbar();\n\t}\n\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\tthis.autosave();\n\t}\n\n\tthis.gui.sideBySide = this.createSideBySide();\n\n\tthis._rendered = this.element;\n\n\n\t// Fixes CodeMirror bug (#344)\n\tvar temp_cm = this.codemirror;\n\tsetTimeout(function() {\n\t\ttemp_cm.refresh();\n\t}.bind(temp_cm), 0);\n};\n\n// Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem throw QuotaExceededError. We're going to detect this and set a variable accordingly.\nfunction isLocalStorageAvailable() {\n\tif(typeof localStorage === \"object\") {\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"smde_localStorage\", 1);\n\t\t\tlocalStorage.removeItem(\"smde_localStorage\");\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nSimpleMDE.prototype.autosave = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tvar simplemde = this;\n\n\t\tif(this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to use the autosave feature\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(simplemde.element.form != null && simplemde.element.form != undefined) {\n\t\t\tsimplemde.element.form.addEventListener(\"submit\", function() {\n\t\t\t\tlocalStorage.removeItem(\"smde_\" + simplemde.options.autosave.uniqueId);\n\t\t\t});\n\t\t}\n\n\t\tif(this.options.autosave.loaded !== true) {\n\t\t\tif(typeof localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) == \"string\" && localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) != \"\") {\n\t\t\t\tthis.codemirror.setValue(localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId));\n\t\t\t\tthis.options.autosave.foundSavedValue = true;\n\t\t\t}\n\n\t\t\tthis.options.autosave.loaded = true;\n\t\t}\n\n\t\tlocalStorage.setItem(\"smde_\" + this.options.autosave.uniqueId, simplemde.value());\n\n\t\tvar el = document.getElementById(\"autosaved\");\n\t\tif(el != null && el != undefined && el != \"\") {\n\t\t\tvar d = new Date();\n\t\t\tvar hh = d.getHours();\n\t\t\tvar m = d.getMinutes();\n\t\t\tvar dd = \"am\";\n\t\t\tvar h = hh;\n\t\t\tif(h >= 12) {\n\t\t\t\th = hh - 12;\n\t\t\t\tdd = \"pm\";\n\t\t\t}\n\t\t\tif(h == 0) {\n\t\t\t\th = 12;\n\t\t\t}\n\t\t\tm = m < 10 ? \"0\" + m : m;\n\n\t\t\tel.innerHTML = \"Autosaved: \" + h + \":\" + m + \" \" + dd;\n\t\t}\n\n\t\tthis.autosaveTimeoutId = setTimeout(function() {\n\t\t\tsimplemde.autosave();\n\t\t}, this.options.autosave.delay || 10000);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.clearAutosavedValue = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tif(this.options.autosave == undefined || this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to clear the autosave value\");\n\t\t\treturn;\n\t\t}\n\n\t\tlocalStorage.removeItem(\"smde_\" + this.options.autosave.uniqueId);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.createSideBySide = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\tif(!preview || !/editor-preview-side/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview-side\";\n\t\twrapper.parentNode.insertBefore(preview, wrapper.nextSibling);\n\t}\n\n\t// Syncs scroll  editor -> preview\n\tvar cScroll = false;\n\tvar pScroll = false;\n\tcm.on(\"scroll\", function(v) {\n\t\tif(cScroll) {\n\t\t\tcScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tpScroll = true;\n\t\tvar height = v.getScrollInfo().height - v.getScrollInfo().clientHeight;\n\t\tvar ratio = parseFloat(v.getScrollInfo().top) / height;\n\t\tvar move = (preview.scrollHeight - preview.clientHeight) * ratio;\n\t\tpreview.scrollTop = move;\n\t});\n\n\t// Syncs scroll  preview -> editor\n\tpreview.onscroll = function() {\n\t\tif(pScroll) {\n\t\t\tpScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tcScroll = true;\n\t\tvar height = preview.scrollHeight - preview.clientHeight;\n\t\tvar ratio = parseFloat(preview.scrollTop) / height;\n\t\tvar move = (cm.getScrollInfo().height - cm.getScrollInfo().clientHeight) * ratio;\n\t\tcm.scrollTo(0, move);\n\t};\n\treturn preview;\n};\n\nSimpleMDE.prototype.createToolbar = function(items) {\n\titems = items || this.options.toolbar;\n\n\tif(!items || items.length === 0) {\n\t\treturn;\n\t}\n\tvar i;\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(toolbarBuiltInButtons[items[i]] != undefined) {\n\t\t\titems[i] = toolbarBuiltInButtons[items[i]];\n\t\t}\n\t}\n\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-toolbar\";\n\n\tvar self = this;\n\n\tvar toolbarData = {};\n\tself.toolbar = items;\n\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(items[i].name == \"guide\" && self.options.toolbarGuideIcon === false)\n\t\t\tcontinue;\n\n\t\tif(self.options.hideIcons && self.options.hideIcons.indexOf(items[i].name) != -1)\n\t\t\tcontinue;\n\n\t\t// Fullscreen does not work well on mobile devices (even tablets)\n\t\t// In the future, hopefully this can be resolved\n\t\tif((items[i].name == \"fullscreen\" || items[i].name == \"side-by-side\") && isMobile())\n\t\t\tcontinue;\n\n\n\t\t// Don't include trailing separators\n\t\tif(items[i] === \"|\") {\n\t\t\tvar nonSeparatorIconsFollow = false;\n\n\t\t\tfor(var x = (i + 1); x < items.length; x++) {\n\t\t\t\tif(items[x] !== \"|\" && (!self.options.hideIcons || self.options.hideIcons.indexOf(items[x].name) == -1)) {\n\t\t\t\t\tnonSeparatorIconsFollow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!nonSeparatorIconsFollow)\n\t\t\t\tcontinue;\n\t\t}\n\n\n\t\t// Create the icon and append to the toolbar\n\t\t(function(item) {\n\t\t\tvar el;\n\t\t\tif(item === \"|\") {\n\t\t\t\tel = createSep();\n\t\t\t} else {\n\t\t\t\tel = createIcon(item, self.options.toolbarTips, self.options.shortcuts);\n\t\t\t}\n\n\t\t\t// bind events, special for info\n\t\t\tif(item.action) {\n\t\t\t\tif(typeof item.action === \"function\") {\n\t\t\t\t\tel.onclick = function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\titem.action(self);\n\t\t\t\t\t};\n\t\t\t\t} else if(typeof item.action === \"string\") {\n\t\t\t\t\tel.href = item.action;\n\t\t\t\t\tel.target = \"_blank\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttoolbarData[item.name || item] = el;\n\t\t\tbar.appendChild(el);\n\t\t})(items[i]);\n\t}\n\n\tself.toolbarElements = toolbarData;\n\n\tvar cm = this.codemirror;\n\tcm.on(\"cursorActivity\", function() {\n\t\tvar stat = getState(cm);\n\n\t\tfor(var key in toolbarData) {\n\t\t\t(function(key) {\n\t\t\t\tvar el = toolbarData[key];\n\t\t\t\tif(stat[key]) {\n\t\t\t\t\tel.className += \" active\";\n\t\t\t\t} else if(key != \"fullscreen\" && key != \"side-by-side\") {\n\t\t\t\t\tel.className = el.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\t\t}\n\t\t\t})(key);\n\t\t}\n\t});\n\n\tvar cmWrapper = cm.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper);\n\treturn bar;\n};\n\nSimpleMDE.prototype.createStatusbar = function(status) {\n\t// Initialize\n\tstatus = status || this.options.status;\n\tvar options = this.options;\n\tvar cm = this.codemirror;\n\n\n\t// Make sure the status variable is valid\n\tif(!status || status.length === 0)\n\t\treturn;\n\n\n\t// Set up the built-in items\n\tvar items = [];\n\tvar i, onUpdate, defaultValue;\n\n\tfor(i = 0; i < status.length; i++) {\n\t\t// Reset some values\n\t\tonUpdate = undefined;\n\t\tdefaultValue = undefined;\n\n\n\t\t// Handle if custom or not\n\t\tif(typeof status[i] === \"object\") {\n\t\t\titems.push({\n\t\t\t\tclassName: status[i].className,\n\t\t\t\tdefaultValue: status[i].defaultValue,\n\t\t\t\tonUpdate: status[i].onUpdate\n\t\t\t});\n\t\t} else {\n\t\t\tvar name = status[i];\n\n\t\t\tif(name === \"words\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t} else if(name === \"lines\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t} else if(name === \"cursor\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = \"0:0\";\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tvar pos = cm.getCursor();\n\t\t\t\t\tel.innerHTML = pos.line + \":\" + pos.ch;\n\t\t\t\t};\n\t\t\t} else if(name === \"autosave\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\t\t\t\t\tel.setAttribute(\"id\", \"autosaved\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\titems.push({\n\t\t\t\tclassName: name,\n\t\t\t\tdefaultValue: defaultValue,\n\t\t\t\tonUpdate: onUpdate\n\t\t\t});\n\t\t}\n\t}\n\n\n\t// Create element for the status bar\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-statusbar\";\n\n\n\t// Create a new span for each item\n\tfor(i = 0; i < items.length; i++) {\n\t\t// Store in temporary variable\n\t\tvar item = items[i];\n\n\n\t\t// Create span element\n\t\tvar el = document.createElement(\"span\");\n\t\tel.className = item.className;\n\n\n\t\t// Ensure the defaultValue is a function\n\t\tif(typeof item.defaultValue === \"function\") {\n\t\t\titem.defaultValue(el);\n\t\t}\n\n\n\t\t// Ensure the onUpdate is a function\n\t\tif(typeof item.onUpdate === \"function\") {\n\t\t\t// Create a closure around the span of the current action, then execute the onUpdate handler\n\t\t\tthis.codemirror.on(\"update\", (function(el, item) {\n\t\t\t\treturn function() {\n\t\t\t\t\titem.onUpdate(el);\n\t\t\t\t};\n\t\t\t}(el, item)));\n\t\t}\n\n\n\t\t// Append the item to the status bar\n\t\tbar.appendChild(el);\n\t}\n\n\n\t// Insert the status bar into the DOM\n\tvar cmWrapper = this.codemirror.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\n\treturn bar;\n};\n\n/**\n * Get or set the text content.\n */\nSimpleMDE.prototype.value = function(val) {\n\tif(val === undefined) {\n\t\treturn this.codemirror.getValue();\n\t} else {\n\t\tthis.codemirror.getDoc().setValue(val);\n\t\treturn this;\n\t}\n};\n\n\n/**\n * Bind static methods for exports.\n */\nSimpleMDE.toggleBold = toggleBold;\nSimpleMDE.toggleItalic = toggleItalic;\nSimpleMDE.toggleStrikethrough = toggleStrikethrough;\nSimpleMDE.toggleBlockquote = toggleBlockquote;\nSimpleMDE.toggleHeadingSmaller = toggleHeadingSmaller;\nSimpleMDE.toggleHeadingBigger = toggleHeadingBigger;\nSimpleMDE.toggleHeading1 = toggleHeading1;\nSimpleMDE.toggleHeading2 = toggleHeading2;\nSimpleMDE.toggleHeading3 = toggleHeading3;\nSimpleMDE.toggleCodeBlock = toggleCodeBlock;\nSimpleMDE.toggleUnorderedList = toggleUnorderedList;\nSimpleMDE.toggleOrderedList = toggleOrderedList;\nSimpleMDE.cleanBlock = cleanBlock;\nSimpleMDE.drawLink = drawLink;\nSimpleMDE.drawImage = drawImage;\nSimpleMDE.drawTable = drawTable;\nSimpleMDE.drawHorizontalRule = drawHorizontalRule;\nSimpleMDE.undo = undo;\nSimpleMDE.redo = redo;\nSimpleMDE.togglePreview = togglePreview;\nSimpleMDE.toggleSideBySide = toggleSideBySide;\nSimpleMDE.toggleFullScreen = toggleFullScreen;\n\n/**\n * Bind instance methods for exports.\n */\nSimpleMDE.prototype.toggleBold = function() {\n\ttoggleBold(this);\n};\nSimpleMDE.prototype.toggleItalic = function() {\n\ttoggleItalic(this);\n};\nSimpleMDE.prototype.toggleStrikethrough = function() {\n\ttoggleStrikethrough(this);\n};\nSimpleMDE.prototype.toggleBlockquote = function() {\n\ttoggleBlockquote(this);\n};\nSimpleMDE.prototype.toggleHeadingSmaller = function() {\n\ttoggleHeadingSmaller(this);\n};\nSimpleMDE.prototype.toggleHeadingBigger = function() {\n\ttoggleHeadingBigger(this);\n};\nSimpleMDE.prototype.toggleHeading1 = function() {\n\ttoggleHeading1(this);\n};\nSimpleMDE.prototype.toggleHeading2 = function() {\n\ttoggleHeading2(this);\n};\nSimpleMDE.prototype.toggleHeading3 = function() {\n\ttoggleHeading3(this);\n};\nSimpleMDE.prototype.toggleCodeBlock = function() {\n\ttoggleCodeBlock(this);\n};\nSimpleMDE.prototype.toggleUnorderedList = function() {\n\ttoggleUnorderedList(this);\n};\nSimpleMDE.prototype.toggleOrderedList = function() {\n\ttoggleOrderedList(this);\n};\nSimpleMDE.prototype.cleanBlock = function() {\n\tcleanBlock(this);\n};\nSimpleMDE.prototype.drawLink = function() {\n\tdrawLink(this);\n};\nSimpleMDE.prototype.drawImage = function() {\n\tdrawImage(this);\n};\nSimpleMDE.prototype.drawTable = function() {\n\tdrawTable(this);\n};\nSimpleMDE.prototype.drawHorizontalRule = function() {\n\tdrawHorizontalRule(this);\n};\nSimpleMDE.prototype.undo = function() {\n\tundo(this);\n};\nSimpleMDE.prototype.redo = function() {\n\tredo(this);\n};\nSimpleMDE.prototype.togglePreview = function() {\n\ttogglePreview(this);\n};\nSimpleMDE.prototype.toggleSideBySide = function() {\n\ttoggleSideBySide(this);\n};\nSimpleMDE.prototype.toggleFullScreen = function() {\n\ttoggleFullScreen(this);\n};\n\nSimpleMDE.prototype.isPreviewActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.lastChild;\n\n\treturn /editor-preview-active/.test(preview.className);\n};\n\nSimpleMDE.prototype.isSideBySideActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\treturn /editor-preview-active-side/.test(preview.className);\n};\n\nSimpleMDE.prototype.isFullscreenActive = function() {\n\tvar cm = this.codemirror;\n\n\treturn cm.getOption(\"fullScreen\");\n};\n\nSimpleMDE.prototype.getState = function() {\n\tvar cm = this.codemirror;\n\n\treturn getState(cm);\n};\n\nSimpleMDE.prototype.toTextArea = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\n\tif(wrapper.parentNode) {\n\t\tif(this.gui.toolbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.toolbar);\n\t\t}\n\t\tif(this.gui.statusbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.statusbar);\n\t\t}\n\t\tif(this.gui.sideBySide) {\n\t\t\twrapper.parentNode.removeChild(this.gui.sideBySide);\n\t\t}\n\t}\n\n\tcm.toTextArea();\n\n\tif(this.autosaveTimeoutId) {\n\t\tclearTimeout(this.autosaveTimeoutId);\n\t\tthis.autosaveTimeoutId = undefined;\n\t\tthis.clearAutosavedValue();\n\t}\n};\n\nmodule.exports = SimpleMDE;","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history).md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"null\", mode: \"jinja2\"},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\", \"mm\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki \", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]}\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n"],"sourceRoot":""}